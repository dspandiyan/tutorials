Flow-Control - Part-02: Selection Statement (if-else)
-----------------------------------------------------

	- Selection Statements (if-else):
	
		- if-else:
		
			- Syntax:
			
				if(b){
					Action if b is true;
				}
				else {
					Action if b is false;
				}
				
			- Note: b --> should be boolean type.
			
		- The argument to the if statement should be boolean type by mistake if we are trying to provide any other type then we will get compile time err
		
		- Possilbe questions:
		
			- Example_1:
			
				int x = 0;
				
				if(x){
					System.out.println("Hello");
				} else {
					System.out.println("hi");
				}
				
				Output:
				
					CE: incompatible types
						found: int
						required: boolean
						
			- Example_2:
			
				int x = 10;
				
				if(x = 20){
					System.out.println("Hello");
				} else {
					System.out.println("Hi");
				}
				
				Output:
				
					CE: incompatible types
						found: int
						required: boolean
						
				Note: Condition statement contains assignment operation, not a conditional check.
				
			- Example_3:
			
				int x = 10
				
				if(x == 20){
					System.out.println("Hello");
				} else {
					System.out.println("Hi");
				}
				
				Output: Hi
				
			- Example_4:
			
				boolean b = true;
				
				if(b = false){
					System.out.println("Hello");
				} else {
					System.out.println("Hi");
				}
				
				Output: Hi
				
			- Example_5:
			
				boolean b = false;
				
				if(b == false){
					System.out.println("Hello");
				} else {
					System.out.println("Hi");
				}
				
				Output: Hello
				
		- Else part and curly braces are optional without curly braces, only one statement is allowed under if which should not be declartive 
		  statement.
		  
		  - Example:
		  
			if(true)
				System.out.println("Hello");
			
			Output: Hello
			
			if(true);
			
			Output: empty
			
			
			if(true)
				int x = 10;
				
			Output: compile time error.
				
			if(true){
				int x = 10;
			}
			
			Output: valid statement and empty as empty.
			
			- Note: 
			
				- semi-colon is a valid Java statement which is also known as empty statement.
				
				- Reason behind not allowing a declartive statement in if without curly brace.
				
					   if(true)
						int x = 10;
					   
					   if we declare anything rite after the if statement, the declartion will be a local variable, local variables are available or
					   accessible within the block not outside, in this case the other statements are out ot the block, so if we declare something 
					   we can't access that variable in the outside. So if condition without curly brace should not contain a declartive statement.
					   
				- There is no dangling else problem in Java.
				
					- dangling else: If there is multiple if condition and only one else condition, other programming languages will give CE.
				
					- Every else is mapped to the nearest if statement.
					
					- Example:
					
						if(true)
							if(true)
								System.out.println("Hello");
						else
							System.out.println("Hi");
					   
					   
				