Operators & Assignments - Part-06: assignment operators
--------------------------------------------------------

	- Java operator precedence:
	
		- Unary  Operators:
		
			[], x++, x--
			
			++x, --x, ~, !
			
			new, <type>
			
		- Arithmetic Operators:
		
			*, /, %
			
			+, -
			
		- Shift Operators:
		
			>>, >>>, <<
			
		- Comparison Operators:
		
			<, <=, >, >=, instanceof
			
		- Equality Operators:
		
			==, !=
			
		- Bitwise Operators:
		
			&
			
			^
			
			|
			
		- Short circuit Operators:
		
			&&
			
			||
			
		- Conditional Operators:
		
			?:
			
		- Assignment Operators:
		
			=, +=, -=, *= ...
			
	- Evaluation Order of Java Operands:
	
		- In Java, we have only operator precedence, but not operand precedence. Before applying any operator all operands will be evaluated from
		  left to right.
		  
		- Example:
		
			class Test{
				public static void main(String[] args){
					System.out.println(m1(1)+m1(2)*m1(3)/ m1(4) + m1(5) * m1(6));
				}
				
				public static int m1(int i){
					System.out.println(i);
					return i;
				}
			}
			
			- Execution flow:
			
				- First all the operands will be evaluated.
				
					Step_1  ==> 1 + 2*3 / 4 + 5*6
					
					Step_2  ==> Both * and / are on same level, so left to right.
					
								1 + 6/4 + 5*6
								
					Step_3  ==> Both / and * are on same level, so left to right.
					
								1 + 1 + 5* 6
								
					Step_4  ==> * has the higher precedence than +, so * will be executed first.
					
								1 + 1 +30
								
					Step_5  ==> Now only + is left, so left to right.
					
								2+30 = 32
								
								a = 32
								
								